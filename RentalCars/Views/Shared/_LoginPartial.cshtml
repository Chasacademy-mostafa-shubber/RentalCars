@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var _user = await UserManager.GetUserAsync(User);

}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User)){

        <li class="nav-item dropdown">
            
            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                @_user.FullName
            </a>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" asp-controller="Account" asp-action="Settings">Settings</a></li>
                @if (_user.IsAdmin == true)
                {
                 <li><a class="dropdown-item" asp-controller="Car" asp-action="Index">Car list</a></li>
                }
                <li><hr class="dropdown-divider"></li>
                <li>
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="nav-link btn btn-link">Logout</button>
                    </form>
                </li>
            </ul>
        </li>

        

 
  
    }
    else
    {

        


    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login"> Login</a>
    </li>

      
}
</ul>


